# Get editor completions based on the config schema
"$schema" = "https://starship.rs/config-schema.json"

# A minimal left prompt
format = """
[‚ßâ](fg:green) ${custom.pwd}\
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$directory\
$vcsh\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$docker_context\
$package\
$c\
$cmake\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$haskell\
$helm\
$java\
$julia\
$kotlin\
$lua\
$nim\
$nodejs\
$ocaml\
$perl\
$php\
$pulumi\
$purescript\
$python\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$swift\
$terraform\
$vlang\
$vagrant\
$zig\
$buf\
$nix_shell\
$conda\
$meson\
$spack\
$memory_usage\
$aws\
$gcloud\
$openstack\
$azure\
$env_var\
$crystal\
$custom\
$sudo\
$cmd_duration\
$jobs\
$battery\
$status\
$container\
$shell\
$fill$time\
\n$character"""

# Use custom format
# format = """
# [‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)
# [‚îÇ](bold green)$directory$rust$package
# [‚îî‚îÄ>](bold green) """

# Inserts a blank line between shell prompts
add_newline = false
# Wait milliseconds for starship to check files under the current directory.
scan_timeout = 50
# Timeout for commands executed by starship (in milliseconds).
command_timeout = 500
continuation_prompt = "[‚ñ∂‚ñ∂](grey) "
palette = "p3"

# Define custom colors
[palettes.p3]
black = '#101012'
grey1 = '#18191B'
grey2 = '#242629'
grey3 = '#34373B'
grey4 = '#484D52'
grey = '#6C6F7F'
white = '#ACAFB4'
green = '#63D846'
orange = '#D75F00'
blue = '#689AFD'
cyan = '#ACCBE1'
purple = '#765ADA' # '#574AB2',
yellow = '#C3B11A' # '#E3D888' '#FFE787' '#D1D0A3'
red = '#BF3100'

lightYellow = '#FFFFED'
lightGreen = '#C4D697'
lightPurple = '#B197D6'

darkGreen = '#13230c'
darkBlue = '#181928'
darkCyan = '#0c1820'
darkRed = '#1F0909'    # '#340009'
darkYellow = '#212100'
darkOrange = '#371B00'
darkPurple = '#180225'

[palettes.sRGB]
black = '#101012'
grey1 = '#18191B'
grey2 = '#242629'
grey3 = '#34373B'
grey4 = '#474D53'
grey = '#6B6F80'
white = '#ABAFB5'
green = '#00DB1B'
orange = '#E85500'
blue = '#589CFF'
cyan = '#A4CCE3'
purple = '#7B59E2'
yellow = '#C7B000'
red = '#D01A00'

lightYellow = '#FFFFEB'
lightGreen = '#C0D78F'
lightPurple = '#B696DB'

darkGreen = '#0D2409'
darkBlue = '#181929'
darkCyan = '#081821'
darkRed = '#220708'
darkYellow = '#212100'
darkOrange = '#3B1900'
darkPurple = '#1B0127'

[fill]
symbol = "‚Äî"
style = "grey"
disabled = false

# [battery]
# full_symbol = "üîã"
# charging_symbol = "üîå"
# discharging_symbol = "‚ö°"
#
# [[battery.display]]
# threshold = 30
# style = "bold red"

[character]
disabled = false
format = "$symbol "
success_symbol = "[ùï¨](green)" # The format string used before the text input if the previous command succeeded.
error_symbol = "[ùï¨](green)"   # The format string used before the text input if the previous command failed.

# [cmd_duration]
# min_time = 10_000                    # Show command duration over 10,000 milliseconds (=10 sec)
# format = " took [$duration]($style)"

[directory]
disabled = true
truncation_length = 0
format = "[$path]($style)[$read_only]($read_only_style) "
home_symbol = '~'
use_os_path_sep = true
style = 'green'

[directory.substitutions]

[git_branch]
format = '[$symbol$branch(\($remote_name/$remote_branch\))]($style) '
symbol = "Ôáí "
style = "purple"
# Shows the remote tracking branch name, even if it is equal to the local branch name.
always_show_remote = false
only_attached = true

[git_commit]
format = '[\($hash$tag\)]($style) '
commit_hash_length = 8
style = "bold white"
only_detached = true
tag_disabled = true
tag_symbol = " üè∑  "

# [git_state]
# format = '[\($state( $progress_current of $progress_total)\)]($style) '

[git_status]
conflicted = "‚â†${count} "
ahead = "‚ù±${count} "
behind = "‚ù∞${count} "
diverged = "‚ù±${ahead_count} ‚ù∞${behind_count} "
untracked = "ÔÑ®${count} "
stashed = "S${count} "
modified = "‚ú±${count} "
staged = "+${count} "
renamed = "R${count} "
deleted = "-${count} "
format = '[$conflicted$stashed$deleted$renamed$staged$modified$untracked$ahead_behind]($style)'
style = "purple"

# [hostname]
# ssh_only = false
# format = "<[$hostname]($style)>"
# trim_at = "-"
# style = "bold dimmed white"
# disabled = true
#
# [julia]
# format = "[$symbol$version]($style) "
# symbol = "‡ÆÉ "
# style = "bold green"
#
# [memory_usage]
# format = "$symbol[${ram}( | ${swap})]($style) "
# threshold = 70
# style = "bold dimmed white"
# disabled = false
#
# # Disable the package module, hiding it from the prompt completely
# [package]
# disabled = true
#
# [python]
# format = "[$symbol$version]($style) "
# style = "bold green"
#
# [rust]
# format = "[$symbol$version]($style) "
# style = "bold green"

[time]
disabled = false
format = "[ÓÇ∂](fg:green)[Ôôè $time](fg:black bg:green)[ÓÇ¥](fg:green)"
use_12hr = false
time_format = "%T"
utc_time_offset = "local"
# time_range = "10:00:00-14:00:00"

[jobs]
format = "[$symbol( $number)]($style) "
symbol = "ﬂ∑"
style = 'blue'
number_threshold = 2
symbol_threshold = 1

[username]
disabled = true
style_user = "white"
style_root = "green bold"
format = "user: [$user]($style) "
show_always = true

[shell]
disabled = true

# [nodejs]
# format = "via [ü§ñ $version](bold green) "

[custom.pwd]
disabled = false
when = true
command = "echo $PWD"
format = '[$output](fg:green) '
